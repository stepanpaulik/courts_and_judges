?%<>%
xfun::pkg_attach2("taskscheduleR", "tidyverse")
?%<>%
?distinct
setwd("C:/Users/stepa/OneDrive - Humboldt-Universitaet zu Berlin, CMS/PhD/Courts and Judges/courts_and_judges/introduction_to_R")
knitr::opts_chunk$set(eval = FALSE)
# install.packages("tidyverse")
library(tidyverse)
judges = readRDS("../data/US_judges.rds")
Judges %>%
group_by(uni) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N)
judges %>%
judges %>%
group_by(uni) %>%
summarize(N = n()) %>%
mutate(freq = N / sum(N))
CUNI = length(judges[judges$uni == "CUNI",1])/length(judges$uni)
MUNI = length(judges[judges$uni == "MUNI",1])/length(judges$uni)
# Tidyverse solution
judges %>%
group_by(uni) %>%
summarize(N = n()) %>%
mutate(prop = N / sum(N))
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg = mean())
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg = mean(age))
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg = mean(yob))
summarize(avg_age = year(year(Sys.Date()) - yob)
summarize(avg_age = year(Sys.Date() - yob)
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg_age = year(Sys.Date()) - yob)
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg_age = mean(year(Sys.Date()) - yob))
# Exercise 3
# Base solution
mean(judges[judges$gender== "F",])
judges[judges$gender == "F",]
mean(judges$yob[judges$gende r== "M",])
mean(judges$yob[judges$gende r== "M",])
mean(judges$yob[judges$gender == "M",])
judges$yob[judges$gender == "M",]
mean(judges$yob[judges$gender == "M"])
# Exercise 3
# Base solution
mean(judges$yob[judges$gender == "F"])
# Exercise 3
# Base solution
mean(year(Sys.Date()) - judges$yob[judges$gender == "F"])
mean(year(Sys.Date()) - judges$yob[judges$gender == "M"])
# Tidyverse solution
judges %>%
group_by(gender) %>%
summarize(avg_age = mean(year(Sys.Date()) - yob))
# Exercise 3 reverse the names of judges
for(i in 1:length(judges$judge_name)){
name = str_split(judges$judge_name[[i]], pattern = "")
name = as.vector(name[[1]])
name_rev = rev(name)
judges$eman_egduj[[i]] = paste(name_rev, collapse = "")
}
```
if(!lubridate::is.Date(age1) | !lubridate::is.Date(age2)){
stop("The arguments are not date")
} else{
output = year(age1) - year(age2)
return(output)
}}
if(!lubridate::is.Date(age1) | !lubridate::is.Date(age2)){
stop("The arguments are not date")
} else{
output = year(age1) - year(age2)
return(output)
}}
age_diff = function(age1,age2) {
if(!lubridate::is.Date(age1) | !lubridate::is.Date(age2)){
stop("The arguments are not date")
} else{
output = year(age1) - year(age2)
return(output)
}
}
View(judges)
age_diff(judges$start, judges$yob)
typeof(judges$start)
is.Date(judges$start)
is.Date(judges$yob)
year(judges$yob)
age_diff(judges$start, judges$end)
age_diff(judges$end, judges$start)
# Exercise 3 reverse the names of judges
for(i in 1:length(judges$judge_name)){
name = str_split(judges$judge_name[[i]], pattern = "")
name = as.vector(name[[1]])
name_rev = rev(name)
judges$eman_egduj[[i]] = paste(name_rev, collapse = "")
}
View(judges)
metadata = readRDS("../data/US_metadata.rds") %>% select(doc_id, date_decision, date_submission)
metadata$date_decision[[1]]
metadata$date_decision[1]
# Exercise 1
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[[i]] = metadata$date_submission[[i]] - metadata$date_decision[[i]]
}
# Exercise 1
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[[i]] = metadata$date_submission[[i]] - metadata$date_decision[[i]]
}
metadata$length_proceedings = rep(NA, times = length(metadata$date_decision))
View(metadata)
metadata$date_submission[[1]] - metadata$date_decision[[1]]
metadata$length_proceedings = rep(NA, times = length(metadata$date_decision))
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[i] = metadata$date_submission[[i]] - metadata$date_decision[[i]]
}
View(metadata)
metadata$length_proceedings = rep(NA, times = length(metadata$date_decision))
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[i] = metadata$date_decision[[i]] - metadata$date_submission[[i]]
}
start_time <- Sys.time()
metadata = metadata %>%
mutate(length_proceedings = date_decision - date_submission)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
metadata$length_proceedings = rep(NA, times = length(metadata$date_decision))
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[i] = metadata$date_decision[[i]] - metadata$date_submission[[i]]
}
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
for(i in seq_along(metadata$date_decision)){
metadata$length_proceedings[i] = metadata$date_decision[[i]] - metadata$date_submission[[i]]
}
View(metadata)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
metadata$l
remove(metadata$length_proceedings)
metadata <- metadata[,-4]
View(metadata)
# Drop the column so that the code starts from an equal position
metadata <- metadata[,-4]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
metadata = readRDS("../data/US_metadata.rds")
View(metadata)
?select
View(metadata)
metadata = metadata |>
select(!c(concerned_body, concerned_constitutional_acts, concerned_body, subject_proceedings, field_register, url_adress))
View(metadata)
metadata = metadata |>
select(!c(concerned_body, concerned_constitutional_acts, concerned_body, subject_proceedings, field_register, url_adress, popular_name))
# I loaded the metadata file
metadata = readRDS("../data/US_metadata.rds")
metadata = metadata |>
select(!c(concerned_body, concerned_constitutional_acts, concerned_body, subject_proceedings, field_register, url_adress, popular_name))
metadata |>
filter(judge_rapporteur == "Kateřina Šimáčková")
View(metadata)
metadata |>
filter(judge_rapporteur == "Šimáčková Kateřina")
metadata |>
filter(judge_rapporteur == "Šimáčková Kateřina" | judge_rapporteur == "Ludvík David")
View(metadata)
metadata |>
filter(date_decision < "22-01-01")
View(metadata)
metadata |>
filter(date_decision < "2022-01-01")
metadata |>
filter(date_decision < "2022-01-01" & date_decision > "2020-01-01")
metadata |>
filter(outcome != "granted")
starwars
